{"ast":null,"code":"import _slicedToArray from\"C:/Users/Benson/Desktop/ohm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{ThemeContext,themes}from\"contexts/ThemeContext\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function ThemeContextWrapper(props){var _useState=useState(themes.dark),_useState2=_slicedToArray(_useState,2),theme=_useState2[0],setTheme=_useState2[1];function changeTheme(theme){setTheme(theme);}useEffect(function(){switch(theme){case themes.light:document.body.classList.add(\"white-content\");break;case themes.dark:default:document.body.classList.remove(\"white-content\");break;}},[theme]);return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{theme:theme,changeTheme:changeTheme},children:props.children});}","map":{"version":3,"sources":["C:/Users/Benson/Desktop/ohm/src/components/ThemeWrapper/ThemeWrapper.js"],"names":["React","useState","useEffect","ThemeContext","themes","ThemeContextWrapper","props","dark","theme","setTheme","changeTheme","light","document","body","classList","add","remove","children"],"mappings":"kJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,YAAT,CAAuBC,MAAvB,KAAqC,uBAArC,C,2CAEA,cAAe,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CACjD,cAA0BL,QAAQ,CAACG,MAAM,CAACG,IAAR,CAAlC,wCAAOC,KAAP,eAAcC,QAAd,eAEA,QAASC,CAAAA,WAAT,CAAqBF,KAArB,CAA4B,CAC1BC,QAAQ,CAACD,KAAD,CAAR,CACD,CAEDN,SAAS,CAAC,UAAM,CACd,OAAQM,KAAR,EACE,IAAKJ,CAAAA,MAAM,CAACO,KAAZ,CACEC,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,eAA5B,EACA,MACF,IAAKX,CAAAA,MAAM,CAACG,IAAZ,CACA,QACEK,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,eAA/B,EACA,MAPJ,CASD,CAVQ,CAUN,CAACR,KAAD,CAVM,CAAT,CAYA,mBACE,KAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAEA,KAAK,CAAEA,KAAT,CAAgBE,WAAW,CAAEA,WAA7B,CAA9B,UACGJ,KAAK,CAACW,QADT,EADF,CAKD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ThemeContext, themes } from \"contexts/ThemeContext\";\n\nexport default function ThemeContextWrapper(props) {\n  const [theme, setTheme] = useState(themes.dark);\n\n  function changeTheme(theme) {\n    setTheme(theme);\n  }\n\n  useEffect(() => {\n    switch (theme) {\n      case themes.light:\n        document.body.classList.add(\"white-content\");\n        break;\n      case themes.dark:\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme: theme, changeTheme: changeTheme }}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}